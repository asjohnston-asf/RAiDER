name: Test and build

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  RAIDER_ECMWF_ERA5_UID = ${{ secrets.RAIDER_ECMWF_ERA5_UID }}
  RAIDER_ECMWF_ERA5_API_KEY = ${{ secrets.RAIDER_ECMWF_ERA5_API_KEY }}
  RAIDER_HRES_EMAIL = ${{ secrets.RAIDER_HRES_EMAIL }}
  RAIDER_HRES_API_KEY = ${{ secrets.RAIDER_HRES_API_KEY }}
  RAIDER_HRES_URL = ${{ secrets.RAIDER_HRES_URL }}
  EARTHDATA_USERNAME = ${{ secrets.EARTHDATA_USERNAME }}
  EARTHDATA_PASSWORD = ${{ secrets.EARTHDATA_PASSWORD }}

jobs:
  pytest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.9', '3.10', '3.11', '3.12']
        coverage_report_version: ['3.12']

    steps:
      - uses: actions/checkout@v4

      - uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          create-args: >-
            python=${{ matrix.python_version }}

      - name: Install raider and Check environment
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps .
          
          python -c "import RAiDER; from RAiDER.delay import tropo_delay"
          python -c "import RAiDER; from RAiDER.interpolator import interp_along_axis"
          
          python --version
          python -c "import numpy; print(numpy.__version__)"
          python -c "import pyproj; print(pyproj.__version__)"

      - name: Setup data stores
        shell: bash -l {0}
        run: |
          python -c 'from RAiDER.models.credentials import setup_from_env; setup_from_env()'

      - name: Pytest in conda environment
        shell: bash -l {0}
        run: |
          COV_OPTIONS=$(python -c "import importlib;print(*(' --cov='+p for p in importlib.util.find_spec('RAiDER').submodule_search_locations))")
          pytest -m "not long" test/ $COV_OPTIONS --cov-report=

      - name: Report Coverage
        if: matrix.python_version == matrix.coverage_report_version
        shell: bash -l {0}
        run: |
          python .circleci/fix_coverage_paths.py .coverage ${PWD}/tools/RAiDER/
          coverage report -mi
          coveralls
